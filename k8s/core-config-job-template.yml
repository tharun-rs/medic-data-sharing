apiVersion: batch/v1
kind: Job
metadata:
  name: generate-core-config
spec:
  template:
    spec:
      containers:
      - name: core-config-generator
        image: alpine
        command: ["/bin/sh", "-c"]
        args:
          - |
            echo "Generating core.yaml for all peers..."
            mkdir -p /mnt/fabric-data/peerOrganizations
            for ORG_ID in $(echo "{{ORG_IDS}}" | tr ',' ' '); do
                PEER_DIR="/mnt/fabric-data/crypto-config/peerOrganizations/$ORG_ID.example.com/peers/peer0.$ORG_ID.example.com"
                mkdir -p "$PEER_DIR"
                
                printf "peer:\n  id: peer0.%s\n  networkId: dev\n  address: 0.0.0.0:7051\n  localMspId: %sMSP\n  fileSystemPath: /var/hyperledger/production\n  gossip:\n    useLeaderElection: true\n    orgLeader: false\n    endpoint: peer0.%s:7051\nlogging:\n  level: INFO\n" "$ORG_ID" "$ORG_ID" "$ORG_ID" > "$PEER_DIR/core.yaml"

                echo "Generated core.yaml for $ORG_ID"
            done
            echo "All core.yaml files created."
        volumeMounts:
          - name: fabric-data
            mountPath: /mnt/fabric-data
      restartPolicy: Never
      volumes:
      - name: fabric-data
        persistentVolumeClaim:
          claimName: fabric-pvc
  backoffLimit: 1
